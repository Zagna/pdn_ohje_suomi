class ConfigBag{constructor(initialConfig=[]){if("object"!=typeof initialConfig)throw new TypeError("initialConfig must be of type object.");this._items=initialConfig}set(key,value){if(!key||!value)throw new Error("A key and value must be provided when setting a new option.");this._items[key]=value}has(key){if(!key)throw new Error("A key must be provided.");return this._items.hasOwnProperty(key)&&this._items[key]}get(key,defaultValue=null){return defaultValue&&!this.has(key)?"function"==typeof defaultValue?defaultValue():defaultValue:this._items[key]}}class Data{constructor(){this._data={}}set(uid,key,value){this._data.hasOwnProperty(uid)||(this._data[uid]={}),this._data[uid][key]=value}get(uid,key){if(this._data.hasOwnProperty(uid))return this._data[uid][key]}destroy(uid){this._data.hasOwnProperty(uid)&&delete this._data[uid]}}function Bulma(selector){return this instanceof Bulma?selector instanceof Bulma?selector:(selector instanceof HTMLElement?this._elem=selector:this._elem=document.querySelector(selector),selector||(this._elem=document.createElement("div")),this._elem.hasOwnProperty(Bulma.id)||(this._elem[Bulma.id]=Data.uid++),this):new Bulma(selector)}Data.uid=1,Bulma.VERSION="0.11.0",Bulma.id="bulma-"+(new Date).getTime(),Bulma.cache=new Data,Bulma.plugins={},Bulma.create=(key,config)=>{if(!key||!Bulma.plugins.hasOwnProperty(key))throw new Error("[BulmaJS] A plugin with the key '"+key+"' has not been registered.");return new Bulma.plugins[key].handler(config)},Bulma.registerPlugin=(key,plugin,priority=0)=>{if(!key)throw new Error("[BulmaJS] Key attribute is required.");Bulma.plugins[key]={priority:priority,handler:plugin},Bulma.prototype[key]=function(config){return new Bulma.plugins[key].handler(config,this)}},Bulma.parseDocument=(root=document)=>{let sortedPlugins=Object.keys(Bulma.plugins).sort((a,b)=>Bulma.plugins[a].priority<Bulma.plugins[b].priority);Bulma.each(sortedPlugins,key=>{Bulma.plugins[key].handler.hasOwnProperty("parseDocument")?Bulma.plugins[key].handler.parseDocument(root):console.error("[BulmaJS] Plugin "+key+" does not have a parseDocument method. Automatic document parsing is not possible for this plugin.")})},Bulma.createElement=(name,classes)=>{classes||(classes=[]),"string"==typeof classes&&(classes=[classes]);let elem=document.createElement(name);return Bulma.each(classes,className=>{elem.classList.add(className)}),elem},Bulma.findOrCreateElement=(query,parent=document,elemName="div",classes=[])=>{var elem=parent.querySelector(query);if(!elem){0===classes.length&&(classes=query.split(".").filter(item=>item));var newElem=Bulma.createElement(elemName,classes);return parent.appendChild(newElem),newElem}return elem},Bulma.each=(objects,callback)=>{let i;for(i=0;i<objects.length;i++)callback(objects[i],i)},Bulma.ajax=url=>new Promise((resolve,reject)=>{var request=new XMLHttpRequest;request.open("GET",url,!0),request.onload=()=>{request.status>=200&&request.status<400?resolve(Bulma._stripScripts(request.responseText)):reject()},request.onerror=()=>reject(),request.send()}),Bulma._stripScripts=htmlString=>{var div=document.createElement("div");div.innerHTML=htmlString;for(var scripts=div.getElementsByTagName("script"),i=scripts.length;i--;)scripts[i].parentNode.removeChild(scripts[i]);return div.innerHTML.replace(/  +/g," ")},Bulma.prototype.data=function(key,value){return value?(Bulma.cache.set(this._elem[Bulma.id],key,value),this):Bulma.cache.get(this._elem[Bulma.id],key)},Bulma.prototype.destroyData=function(){return Bulma.cache.destroy(this._elem[Bulma.id]),this},document.addEventListener("DOMContentLoaded",()=>{window.hasOwnProperty("bulmaOptions")&&!1===window.bulmaOptions.autoParseDocument||Bulma.parseDocument()});class Plugin{static defaultConfig(){return{}}constructor(config={},root){if(config.root=root instanceof Bulma?root._elem:root,this.config=new ConfigBag({...this.constructor.defaultConfig(),...config}),!root&&!this.config.has("parent"))throw new Error("A plugin requires a root and/or a parent.");this.parent=this.config.get("parent",config.root?config.root.parentNode:null),this._events={}}on(event,callback){this._events.hasOwnProperty(event)||(this._events[event]=[]),this._events[event].push(callback)}trigger(event,data={}){if(this._events.hasOwnProperty(event))for(let i=0;i<this._events[event].length;i++)this._events[event][i](data)}destroy(){Bulma(this.root).destroyData()}}class Tabs extends Plugin{static parseDocument(context){let elements=context.querySelectorAll(".tabs-wrapper");Bulma.each(elements,element=>{Bulma(element).tabs({hover:!!element.hasAttribute("data-hover")})})}static defaultConfig(){return{hover:!1}}constructor(config,root){super(config,root),this.root=this.config.get("root"),this.root.setAttribute("data-bulma-attached","attached"),this.hover=this.config.get("hover"),this.nav=this.findNav(),this.navItems=this.findNavItems(),this.content=this.findContent(),this.contentItems=this.findContentItems(),this.setupNavEvents(),Bulma(this.root).data("tabs",this),this.trigger("init")}findNav(){return this.root.querySelector(".tabs")}findNavItems(){return this.nav.querySelectorAll("li")}findContent(){return this.root.querySelector(".tabs-content")}findContentItems(){return this.root.querySelectorAll(".tabs-content > ul > li")}setupNavEvents(){Bulma.each(this.navItems,(navItem,index)=>{navItem.addEventListener("click",()=>{this.setActive(index)}),this.hover&&navItem.addEventListener("mouseover",()=>{this.setActive(index)})})}setActive(index){Bulma.each(this.navItems,navItem=>{navItem.classList.remove("is-active")}),Bulma.each(this.contentItems,contentItem=>{contentItem.classList.remove("is-active")}),this.navItems[index].classList.add("is-active"),this.contentItems[index].classList.add("is-active")}}Bulma.registerPlugin("tabs",Tabs);